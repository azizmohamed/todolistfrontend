{"version":3,"sources":["logo.svg","app/components/todoList/item.js","app/components/todoList/list.js","app/components/todoList/todoSlice.js","app/components/todoList/newItem.js","app/components/todoList/todos.js","app/App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Item","props","className","description","List","useSelector","state","todos","todoItems","map","item","todoSlice","createSlice","name","initialState","value","reducers","newItem","payload","push","actions","NewItem","useForm","register","handleSubmit","watch","errors","formState","dispatch","useDispatch","console","log","onSubmit","data","taskDesc","defaultValue","required","exampleRequired","type","Todos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"mNAAe,I,iBCYAA,MAVf,SAAcC,GACZ,OACE,qBAAKC,UAAU,OAAf,SACE,wBAAQA,UAAU,cAAlB,SACKD,EAAME,iB,OCOFC,MATf,WAEE,OADkBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,aAEzCC,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAAMP,YAAaO,EAAKP,kB,eCNxBQ,EAAYC,YAAY,CACnCC,KAAM,QACNC,aAAc,CACZC,MAAO,EACPP,UAAW,IAEbQ,SAAU,CACRC,QAAS,SAACX,EAAD,GAAuB,IAAdY,EAAa,EAAbA,QAChBZ,EAAME,UAAUW,KAAK,CACnBhB,YAAae,EAAQf,kBAOdc,EAAYN,EAAUS,QAAtBH,QAEAN,IAAf,Q,QCbe,SAASU,IAAW,IAAD,EACiCC,cAAzDC,EADwB,EACxBA,SAAUC,EADc,EACdA,aAAcC,EADA,EACAA,MAAoBC,EADpB,EACOC,UAAaD,OAC9CE,EAAWC,cAQjB,OAFAC,QAAQC,IAAIN,EAAM,aAIhB,cADA,CACA,QAAMO,SAAUR,GATD,SAAAS,GACfL,EAASX,EAAQ,CACfd,YAAa8B,EAAKC,eAOpB,UAEE,mCAAOC,aAAa,YAAeZ,EAAS,WAAY,CAAEa,UAAU,MAEnEV,EAAOW,iBAAmB,0DAE3B,uBAAOC,KAAK,cCVHC,MATf,WACE,OACE,sBAAKrC,UAAU,OAAf,UACE,cAACmB,EAAD,IACA,cAAC,EAAD,QCQSmB,MAdf,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,uBAGA,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,UCCOuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJCQ,cAAe,CAC5BC,QAAS,CACL5C,MAAO6C,KCGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACG,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1BjB,K","file":"static/js/main.6ed0221e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './todos.css';\n\nfunction Item(props) {\n  return (\n    <div className=\"Item\">\n      <header className=\"Item-header\">\n          {props.description}\n      </header>\n    </div>\n  );\n}\n\nexport default Item;","import './todos.css';\nimport Item from './item.js';\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction List() {\n  const todoItems = useSelector((state) => state.todos.todoItems)\n  return (\n    todoItems.map((item) => {\n      return <Item description={item.description}/>;\n    })\n  );\n}\n\nexport default List;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    value: 0,\n    todoItems: [],\n  },\n  reducers: {\n    newItem: (state, {payload}) => {\n      state.todoItems.push({\n        description: payload.description\n      });\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { newItem } = todoSlice.actions\n\nexport default todoSlice.reducer","import './todos.css';\nimport { newItem, updateItemDesc } from './todoSlice'\nimport { useDispatch } from 'react-redux'\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n\nexport default function NewItem() {\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const dispatch = useDispatch()\n  const onSubmit = data => {\n    dispatch(newItem({\n      description: data.taskDesc\n  }))}\n\n  console.log(watch(\"taskDesc\")); // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* include validation with required or other standard HTML validation rules */}\n      <input defaultValue=\"New Task\" {...register(\"taskDesc\", { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>Enter task description</span>}\n      \n      <input type=\"submit\" />\n    </form>\n  );\n}\n\n\n\n","import './todos.css';\nimport List from './list.js';\nimport NewItem from './newItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { decrement, increment } from './todoSlice'\n\nfunction Todos() {\n  return (\n    <div className=\"Item\">\n      <NewItem/>\n      <List/>\n    </div>\n  );\n}\n\nexport default Todos;","import logo from '../logo.svg';\nimport './App.css';\nimport Todos from './components/todoList/todos.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Todo List\n      </header>\n      <div className=\"App-body\">\n        <Todos/>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './components/todoList/todoSlice';\n\nexport default configureStore({\n  reducer: {\n      todos: todoReducer\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}