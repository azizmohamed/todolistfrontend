{"version":3,"sources":["logo.svg","app/components/todoList/todoSlice.js","app/components/todoList/task.js","app/components/todoList/list.js","app/components/todoList/newItem.js","app/components/todoList/todos.js","app/App.js","reportWebVitals.js","app/store.js","index.js"],"names":["fetchTasks","createAsyncThunk","a","axios","get","response","data","createTask","task","post","getResponse","deleteTask","id","delete","completeTask","put","todoSlice","createSlice","name","initialState","value","todoItems","loading","reducers","extraReducers","fulfilled","state","action","payload","pending","rejected","console","log","JSON","stringify","actions","newItem","completeItem","deleteItem","tasksRetrieved","Task","props","dispatch","useDispatch","className","checked","completed","type","onChange","description","icon","faTrash","color","onClick","List","useSelector","todos","useEffect","map","item","NewItem","useForm","register","handleSubmit","watch","formState","errors","onSubmit","taskDesc","placeholder","required","Todos","active","spinner","App","Helmet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3492b555.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios';\n\n\nexport const fetchTasks = createAsyncThunk(\n  'tasks/fetchTasks',\n  async () => {\n    const response = await axios.get(`https://todosgetc.azurewebsites.net/api/tasks`)\n    return response? response.data: []\n  }\n)\n\nexport const createTask = createAsyncThunk(\n  'tasks/createTask',\n  async (task) => {\n    await axios.post(`https://todosgetc.azurewebsites.net/api/tasks`, task)\n    const getResponse = await axios.get(`https://todosgetc.azurewebsites.net/api/tasks`)\n    return getResponse? getResponse.data: []\n  }\n)\n\nexport const deleteTask = createAsyncThunk(\n  'tasks/deleteTask',\n  async (id) => {\n    await axios.delete(`https://todosgetc.azurewebsites.net/api/tasks/` + id)\n    const getResponse = await axios.get(`https://todosgetc.azurewebsites.net/api/tasks`)\n    return getResponse? getResponse.data: []\n  }\n)\n\nexport const completeTask = createAsyncThunk(\n  'tasks/completeTask',\n  async (task) => {\n    await axios.put(`https://todosgetc.azurewebsites.net/api/tasks/` + task.id, task)\n    const getResponse = await axios.get(`https://todosgetc.azurewebsites.net/api/tasks`)\n    return getResponse? getResponse.data: []\n  }\n)\n\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    value: 0,\n    todoItems: [],\n    loading: false\n  },\n  reducers: {\n\n  },\n  extraReducers: {\n    // Add reducers for additional action types here, and handle loading state as needed\n    [fetchTasks.fulfilled]: (state, action) => {\n      state.todoItems = action.payload;\n      state.loading = false;\n    },\n    [fetchTasks.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchTasks.rejected]: (state, action) => {\n      state.loading = false;\n      console.log(JSON.stringify( action.payload));\n    },\n    [createTask.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.todoItems = action.payload;\n    },\n    [createTask.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [createTask.rejected]: (state, action) => {\n      state.loading = false;\n      console.log(JSON.stringify( action.payload));\n    },\n    [deleteTask.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.todoItems = action.payload;\n    },\n    [deleteTask.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [deleteTask.rejected]: (state, action) => {\n      state.loading = false;\n      console.log(JSON.stringify( action.payload));\n    },\n    [completeTask.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.todoItems = action.payload;\n    },\n    [completeTask.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [completeTask.rejected]: (state, action) => {\n      state.loading = false;\n      console.log(JSON.stringify( action.payload));\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { newItem, completeItem, deleteItem, tasksRetrieved } = todoSlice.actions\nexport default todoSlice.reducer","import './todos.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { completeTask, deleteTask} from './todoSlice';\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Task(props) {\n  const dispatch = useDispatch();\n  return (\n    <div className=\"Todo-Item\">\n        <input checked={props.completed} \n            type=\"checkbox\"\n            className = \"Status-Input\"\n            onChange={() => dispatch(completeTask({\n              description : props.description,\n              id: props.id,\n              completed: !props.completed\n            }))}></input>\n        <span \n          className = {`Text-Display ${props.completed ? \" Text-Display-Completed\" : \"\"}`}\n            >{props.description}</span>\n        <FontAwesomeIcon \n          className = \"Delete-Icon\"\n          icon={faTrash} \n          color=\"red\" \n          onClick= {() => dispatch(deleteTask(props.id))}/>\n    </div>\n  );\n}\n\nexport default Task;","import './todos.css';\nimport Task from './task';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchTasks } from './todoSlice'\n\nfunction List() {\n  const todoItems = useSelector((state) => state.todos.todoItems);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTasks());\n  },[]);\n\n\n  return (\n    todoItems.map((item) => {\n      return <div key = {item.id}>\n          <Task description={item.description} completed={item.completed} id={item.id}></Task>\n        </div>\n    })\n  );\n}\n\nexport default List;","import './todos.css';\nimport { createTask } from './todoSlice'\nimport { useDispatch } from 'react-redux'\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n\nexport default function NewItem() {\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const dispatch = useDispatch()\n  const onSubmit = data => {\n    dispatch(createTask({\n      description: data.taskDesc\n  }))}\n\n  console.log(watch(\"taskDesc\")); \n\n  return (\n\n    <form \n      onSubmit={handleSubmit(onSubmit)}\n      className=\"New-Item\"\n      >\n      <input \n        placeholder=\"New Task\" \n        className=\"New-Item-Text\"\n        {...register(\"taskDesc\", { required: true })} />\n      \n      <input \n        className=\"Add-Button\"\n        type=\"submit\" \n        value=\"Add\" />\n    </form>\n  );\n}\n\n\n\n","import './todos.css';\nimport List from './list.js';\nimport NewItem from './newItem';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { useSelector } from 'react-redux';\n\nfunction Todos() {\n  const loading = useSelector((state) => state.todos.loading);\n  return(\n    <LoadingOverlay\n      active={loading}\n      spinner\n      >\n      <div className=\"Item\">\n        <NewItem/>\n        <List/>\n      </div>\n    </LoadingOverlay>);\n\n}\n\nexport default Todos;","import logo from '../logo.svg';\nimport './App.css';\nimport Todos from './components/todoList/todos.js';\nimport {Helmet} from \"react-helmet\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Helmet>\n          <title>Todo List</title>\n      </Helmet>\n      <header className=\"App-header\">\n        Todo List\n      </header>\n      <div className=\"App-body\">\n        <Todos/>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './components/todoList/todoSlice';\n\nexport default configureStore({\n  reducer: {\n      todos: todoReducer\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}