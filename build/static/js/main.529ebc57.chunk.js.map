{"version":3,"sources":["logo.svg","app/components/todoList/todoSlice.js","app/components/todoList/task.js","app/components/todoList/list.js","app/components/todoList/newItem.js","app/components/todoList/todos.js","app/App.js","reportWebVitals.js","app/store.js","index.js"],"names":["fetchTasks","createAsyncThunk","a","axios","get","response","data","createTask","task","post","getResponse","deleteTask","id","delete","completeTask","put","todoSlice","createSlice","name","initialState","value","todoItems","reducers","tasksRetrieved","state","payload","newItem","push","description","completed","completeItem","forEach","item","taskCompleted","deleteItem","console","log","extraReducers","fulfilled","action","pending","rejected","JSON","stringify","actions","Task","props","dispatch","useDispatch","checked","type","onChange","onClick","List","useSelector","todos","useEffect","map","NewItem","useForm","register","handleSubmit","watch","errors","formState","onSubmit","taskDesc","defaultValue","required","exampleRequired","Todos","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.529ebc57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\n\n\nexport const fetchTasks = createAsyncThunk(\n  'tasks/fetchTasks',\n  async () => {\n    const response = await axios.get(`https://todosgetc.azurewebsites.net/api/tasks`)\n    return response? response.data: []\n  }\n)\n\nexport const createTask = createAsyncThunk(\n  'tasks/createTask',\n  async (task) => {\n    await axios.post(`https://todosgetc.azurewebsites.net/api/tasks`, task)\n    const getResponse = await axios.get(`https://todosgetc.azurewebsites.net/api/tasks`)\n    return getResponse? getResponse.data: []\n  }\n)\n\nexport const deleteTask = createAsyncThunk(\n  'tasks/deleteTask',\n  async (id) => {\n    await axios.delete(`https://todosgetc.azurewebsites.net/api/tasks/` + id)\n    const getResponse = await axios.get(`https://todosgetc.azurewebsites.net/api/tasks`)\n    return getResponse? getResponse.data: []\n  }\n)\n\nexport const completeTask = createAsyncThunk(\n  'tasks/completeTask',\n  async (task) => {\n    await axios.put(`https://todosgetc.azurewebsites.net/api/tasks/` + task.id, task)\n    const getResponse = await axios.get(`https://todosgetc.azurewebsites.net/api/tasks`)\n    return getResponse? getResponse.data: []\n  }\n)\n\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    value: 0,\n    todoItems: []\n  },\n  reducers: {\n    tasksRetrieved: (state, {payload}) => {\n      state.todoItems =  payload;\n    },\n    newItem: (state, {payload}) => {\n      state.todoItems.push({\n        description: payload.description,\n        completed: false\n      });\n    },\n    completeItem: (state, {payload}) => {\n      state.todoItems.forEach(item =>{\n        item.completed = payload.completed\n      });\n    },\n    taskCompleted: (state) => {\n      state.todoItems.forEach(item =>{\n        item.completed = !item.completed\n      });\n    },\n    deleteItem: (state, {payload}) => {\n      console.log(\"onDelete\")\n    }\n  },\n  extraReducers: {\n    // Add reducers for additional action types here, and handle loading state as needed\n    [fetchTasks.fulfilled]: (state, action) => {\n      state.todoItems = action.payload;\n    },\n    [fetchTasks.pending]: (state, action) => {\n      \n    },\n    [fetchTasks.rejected]: (state, action) => {\n      console.log(JSON.stringify( action.payload));\n    },\n    [createTask.fulfilled]: (state, action) => {\n      state.todoItems = action.payload;\n    },\n    [createTask.pending]: (state, action) => {\n\n    },\n    [createTask.rejected]: (state, action) => {\n      console.log(JSON.stringify( action.payload));\n    },\n    [deleteTask.fulfilled]: (state, action) => {\n      state.todoItems = action.payload;\n    },\n    [deleteTask.pending]: (state, action) => {\n\n    },\n    [deleteTask.rejected]: (state, action) => {\n      console.log(JSON.stringify( action.payload));\n    },\n    [completeTask.fulfilled]: (state, action) => {\n      state.todoItems = action.payload;\n    },\n    [completeTask.pending]: (state, action) => {\n\n    },\n    [completeTask.rejected]: (state, action) => {\n      console.log(JSON.stringify( action.payload));\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { newItem, completeItem, deleteItem, taskCompleted, tasksRetrieved } = todoSlice.actions\nexport default todoSlice.reducer","import './todos.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { completeTask, deleteTask} from './todoSlice'\n\nfunction Task(props) {\n  const dispatch = useDispatch();\n  return (\n    <div >\n        <input checked={props.completed} \n            type=\"checkbox\"\n            onChange={() => dispatch(completeTask({\n              description : props.description,\n              id: props.id,\n              completed: !props.completed\n            }))}></input>\n        <span>{props.description}</span>\n        <button onClick={() => dispatch(deleteTask(props.id))}>Delete</button>\n    </div>\n  );\n}\n\nexport default Task;","import './todos.css';\nimport Task from './task';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchTasks } from './todoSlice'\n\nfunction List() {\n  const todoItems = useSelector((state) => state.todos.todoItems);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTasks());\n  },[]);\n\n\n  return (\n    todoItems.map((item) => {\n      return <div key = {item.id}>\n          <Task description={item.description} completed={item.completed} id={item.id}></Task>\n        </div>\n    })\n  );\n}\n\nexport default List;","import './todos.css';\nimport { newItem, createTask } from './todoSlice'\nimport { useDispatch } from 'react-redux'\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n\nexport default function NewItem() {\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const dispatch = useDispatch()\n  const onSubmit = data => {\n    dispatch(createTask({\n      description: data.taskDesc\n  }))}\n\n  console.log(watch(\"taskDesc\")); // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* include validation with required or other standard HTML validation rules */}\n      <input defaultValue=\"New Task\" {...register(\"taskDesc\", { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>Enter task description</span>}\n      \n      <input type=\"submit\" />\n    </form>\n  );\n}\n\n\n\n","import './todos.css';\nimport List from './list.js';\nimport NewItem from './newItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { decrement, increment } from './todoSlice'\n\nfunction Todos() {\n  return (\n    <div className=\"Item\">\n      <NewItem/>\n      <List/>\n    </div>\n  );\n}\n\nexport default Todos;","import logo from '../logo.svg';\nimport './App.css';\nimport Todos from './components/todoList/todos.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Todo List\n      </header>\n      <div className=\"App-body\">\n        <Todos/>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from './components/todoList/todoSlice';\n\nexport default configureStore({\n  reducer: {\n      todos: todoReducer\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}